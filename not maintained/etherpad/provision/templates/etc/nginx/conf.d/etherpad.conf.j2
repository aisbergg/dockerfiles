# container_managed=true                                                       #
#                                                                              #
# NOTE: by default this file is automatically generated on container startup.  #
# To disable the autogeneration simply change the first line of this file to   #
# 'container_managed=false'                                                    #
################################################################################


upstream etherpad {
    server 127.0.0.1:8001;
}

limit_conn_log_level            warn;
limit_req_zone                  $limit zone=root:5m rate=50r/s;

{% if NGINX_REDIRECT_TO_FIRST_DOMAIN and DOMAINNAMES|length > 1 -%}
server {
    listen                      8080;
    listen                      [::]:8080;
    {% if NGINX_TLS_ENABLED -%}
    listen                      8443 ssl{{ ' http2' if NGINX_HTTP_VERSION == "2.0" else '' }};
    listen                      [::]:8443 ssl{{ ' http2' if NGINX_HTTP_VERSION == "2.0" else '' }};
    {%- endif %}
    server_name                 {% for domain in DOMAINNAMES %}{% if not loop.first %}{{ domain }} {% endif %}{% endfor %};

    location / {
        return 301              $real_scheme://{{ DOMAINNAMES[0] }}$request_uri;
    }
}
{%- endif %}

server {
    listen                      8080;
    listen                      [::]:8080;
    {% if NGINX_TLS_ENABLED -%}
    listen                      8443 ssl{{ ' http2' if NGINX_HTTP_VERSION == "2.0" else '' }};
    listen                      [::]:8443 ssl{{ ' http2' if NGINX_HTTP_VERSION == "2.0" else '' }};
    {%- endif %}
    {% if DOMAINNAMES|length > 0 -%}
    server_name                 {% if NGINX_REDIRECT_TO_FIRST_DOMAIN %}{{ DOMAINNAMES[0] }}{% else %}{% for domain in DOMAINNAMES %}{{ domain }} {% endfor %}{% endif %};
    {%- endif %}

    {% if NGINX_REWRITE_HTTPS -%}
    if ($real_scheme != "https") {
        return 301              https://$host$request_uri;
    }
    {%- endif %}
    # block crawler ( see ../nginx.conf )
    if ($limit_bots = 1) {
        return 403;
    }

    # add nosniff header
    #   see: https://www.owasp.org/index.php/List_of_useful_HTTP_headers
    more_set_headers "X-Content-Type-Options: nosniff";

    # enable anti-cross-site scripting filter built into Internet Explorer,
    # Chrome and Safari
    #   see: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-XSS-Protection
    more_set_headers "X-XSS-Protection: 1; mode=block";

    location / {
        # limit requests per IP
        limit_req               zone=root burst=70;

        # pass request to etherpad server
        proxy_set_header        X-Forwarded-Proto   $real_scheme;
        #proxy_redirect          off;
        proxy_read_timeout      {{ NGINX_PROXY_READ_TIMEOUT }};
        proxy_pass              http://etherpad;
        proxy_set_header        Host                $http_host;
        proxy_set_header        X-Real-IP           $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-For     $proxy_add_x_forwarded_for;
        # strip 'Proxy' header (see httpoxy vulnerability)
        proxy_set_header        Proxy               "";
        proxy_pass_header       Server;
        proxy_buffering         off;
        proxy_http_version      1.1;  # recommended with keepalive connections
        # WebSocket proxying - from http://nginx.org/en/docs/http/websocket.html
        proxy_set_header        Upgrade             $http_upgrade;
        proxy_set_header        Connection          $connection_upgrade;
    }
}

# we're in the http context here
map $http_upgrade $connection_upgrade {
    default   upgrade;
    ''        close;
}
